package core

import "github.com/SimonSchneider/goslu/date"

templ PageSnapshotsTable(view *TableView) {
	@Layout("/templ/snapshots-table", SnapshotsTableContent(view))
}

templ SnapshotsTableContent(view *TableView) {
	<main class="flex-1 flex flex-col overflow-hidden">
		@Header("Snapshots Table")
		<div class="flex-1 p-6 bg-gray-50 overflow-hidden">
			<div class="bg-white rounded-lg shadow-sm border border-gray-200 h-full flex flex-col overflow-hidden max-w-full">
				<div class="flex-1 overflow-auto border border-gray-300 rounded-lg">
					<div class="inline-block min-w-full align-middle">
						<div class="overflow-hidden">
							<table class="min-w-full divide-y divide-gray-300">
								<thead class="bg-gray-50 sticky top-0 z-20">
									<tr>
										<th class="sticky left-0 bg-gray-50 z-30 px-3 py-3.5 text-left text-xs font-semibold text-gray-900 border-r border-gray-300 min-w-32">
											Date
										</th>
										for _, account := range view.Accounts {
											<th class="px-3 py-3.5 text-center text-xs font-semibold text-gray-900 border-r border-gray-300 last:border-r-0 min-w-32">
												{ account.Name }
											</th>
										}
									</tr>
								</thead>
								<tbody class="divide-y divide-gray-200 bg-white">
									for i, row := range view.Rows {
										<tr class="hover:bg-gray-50 even:bg-gray-50">
											<td class={ templ.KV("sticky left-0 z-10 px-3 py-2 text-sm text-gray-900 border-r border-gray-300 font-mono min-w-32", true), templ.KV("bg-white", i%2 == 0), templ.KV("bg-gray-50", i%2 == 1) }>
												{ row.Date.String() }
											</td>
											for _, snap := range row.Snapshots {
												@SnapshotCell(snap.AccountID, row.Date, snap)
											}
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	</main>
}

templ SnapshotCell(accountID string, date date.Date, snapshot AccountSnapshot) {
	<td class="px-3 py-2 text-sm text-gray-900 border-r border-gray-300 last:border-r-0">
		<input
			type="text"
			class="w-full h-full border-0 bg-transparent text-right font-mono text-sm text-gray-900 placeholder-gray-400 focus:outline-none transition-colors px-1 py-0.5"
			value={ getSnapshotValue(snapshot) }
			hx-post={ templ.SafeURL("/accounts/" + accountID + "/snapshots/" + date.String() + "/") }
			hx-trigger="blur changed"
			hx-target="closest td"
			hx-swap="outerHTML"
			hx-indicator="this"
			name="balance"
		/>
	</td>
}

func getSnapshotValue(snapshot AccountSnapshot) string {
	if !snapshot.Balance.Valid() {
		return ""
	}
	return snapshot.Balance.SimpleEncode()
}
